{"version":3,"file":"static/js/326.d2a81d2d.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<any>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({\r\n  color,\r\n  fixedWidth,\r\n  children,\r\n  onClick,\r\n}: ButtonProps) => (\r\n  <StyledButton color={color} fixedWidth={fixedWidth} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 5rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h5\")`\r\n  font-size: 18px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: ;\r\n  color: #000;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 15px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  return (\r\n    <LeftContentSection>\r\n      <Fade direction=\"left\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={9} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={13} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ServiceWrapper>\r\n                <Row justify=\"start\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={8}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 5rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n        const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  return (\r\n    <RightBlockContainer>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"contact\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","fixedWidth","children","onClick","_jsx","LeftContentSection","Content","_templateObject2","ContentWrapper","_templateObject3","ServiceWrapper","_templateObject4","MinTitle","_templateObject5","MinPara","_templateObject6","withTranslation","icon","title","content","section","t","id","Fade","direction","_jsxs","Row","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","map","item","span","RightBlockContainer","ButtonWrapper","button","document","getElementById","scrollIntoView","behavior","scrollTo","props","type","LeftContentBlock","RightContentBlock"],"sourceRoot":""}